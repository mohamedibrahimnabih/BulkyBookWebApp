@model Category

@{
    ViewData["Title"] = Model.Id == 0 ? "Create" : "Edit";
}

<h3>
    @if (Model.Id == 0)
    {
        @:Create New Category
    }
    else
    {
        @:Edit
        <span class="text-warning">@Model.Name</span>
        @:Category
    }
</h3>
<hr />
<div class="row">
    <div>
        <form asp-action="UpSert">
            <div asp-validation-summary="None" class="text-danger"></div>
            <input asp-for="Id" type="hidden" />
            <div class="form-group pb-2">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group pb-2">
                <label asp-for="DisplayOrder" class="control-label"></label>
                <input asp-for="DisplayOrder" class="form-control" />
                <span asp-validation-for="DisplayOrder" class="text-danger"></span>
            </div>
            <div class="row pt-3">
                <div class="col-6 d-flex align-items-center">
                    @if(Model.Id == 0)
                    {
                        <input type="submit" value="Create" class="btn btn-dark form-control" />
                    }
                    else
                    {
                        <input type="submit" value="Update" class="btn btn-dark form-control" />
                    }
                </div>
                <div class="col-6">
                    <a asp-controller="Category" asp-action="Index" class="btn btn-outline-dark form-control"><i class="bi bi-arrow-left-circle-fill"></i> Back to List</a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
